name: üöÄ Deploy update-review Service to AWS

on:
  push:
    paths:
      - 'CRUD_review/update-review/**'
    branches:
      - QA

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üõ†Ô∏è Checkout del repositorio
        uses: actions/checkout@v4

      - name: üîß Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Iniciar sesi√≥n en Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üì¶ Construir y subir imagen Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/update-review:latest \
            -f CRUD_review/update-review/Dockerfile \
            CRUD_review/update-review

          docker push ${{ secrets.DOCKER_USERNAME }}/update-review:latest

  deploy:
    name: üöÄ Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: üöÄ Conectar a EC2 y desplegar update-review
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_UPDATE_REVIEW }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üîç Checking if Docker is installed..."
            if ! command -v docker &> /dev/null; then
              echo "üì¶ Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo usermod -a -G docker $USER
            fi

            echo "üõë Stopping and removing previous container..."
            if sudo docker ps -q -f name=update-review; then
              sudo docker stop update-review
              sudo docker rm update-review
            else
              echo "‚ö†Ô∏è No running container found."
            fi

            echo "üßπ Removing old Docker images..."
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/update-review:latest || true
            sudo docker image prune -af || echo "‚ö†Ô∏è No images to remove."

            echo "üì• Pulling the latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/update-review:latest || exit 1

            echo "üöÄ Running the new container..."
            sudo docker run -d \
              --name update-user \
              -p ${{ secrets.SERVER_PORT_UPDATE_REVIEW }}:${{ secrets.SERVER_PORT_UPDATE_REVIEW }} \
              -e PORT=${{ secrets.SERVER_PORT_UPDATE_USER }} \
              -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
              -e POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
              -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -e POSTGRES_DB=${{ secrets.POSTGRES_DB_REVIEW }} \
              -e DB_DIALECT=postgres \
              ${{ secrets.DOCKER_USERNAME }}/update-review:latest

            echo "üîç Verifying deployment..."
            sleep 5
            if sudo docker ps -q -f name=update-review; then
              echo "‚úÖ Deployment successful: update-review Service is running."
            else
              echo "‚ùå Deployment failed: Checking logs..."
              sudo docker logs update-review
              exit 1
            fi

      - name: üîê Cerrar sesi√≥n en Docker Hub
        run: docker logout
        